{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAa,C,SAAEL,E,MAAUC,GAC/B,OAAO,IAAIK,SAAQ,CAACC,EAAKC,KACnBN,EACFK,EAAIF,GAEJG,EAAIH,EAAW,G,CAvCRI,SAASC,cAAc,QAE/BC,iBAAiB,UAAUC,IAC9BA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,cAAcf,MAAMgB,OACzC,MAAMC,EAAOH,OAAOH,EAAEI,cAAcE,KAAKD,OACnCE,EAASJ,OAAOH,EAAEI,cAAcG,OAAOF,OAE7C,IAAK,IAAIG,EAAW,EAAGA,EAAWD,EAAQC,IACxCrB,EAAcqB,EAAUN,GACrBO,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,YAAW,KACTC,EAAA1B,GAAS2B,OAAOC,QACd,qBAAqBzB,QAAeC,MACpC,CACEyB,SAAS,GAEZ,GACAzB,EAAM,IAEV0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBqB,YAAW,KACTC,EAAA1B,GAAS2B,OAAOI,QAAQ,kBAAkB5B,QAAeC,MAAW,CAClEyB,SAAS,GACT,GACDzB,EAAM,IAEba,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  const step = Number(e.currentTarget.step.value);\n  const amount = Number(e.currentTarget.amount.value);\n\n  for (let position = 0; position < amount; position++) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${delay}ms`,\n            {\n              useIcon: false,\n            }\n          );\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.failure(`Reject promise ${position} in ${delay}ms`, {\n            useIcon: false,\n          });\n        }, delay);\n      });\n    delay += step;\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const objPromise = { position, delay };\n  return new Promise((res, rej) => {\n    if (shouldResolve) {\n      res(objPromise);\n    } else {\n      rej(objPromise);\n    }\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","objPromise","Promise","res","rej","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","setTimeout","$parcel$interopDefault","Notify","success","useIcon","catch","failure"],"version":3,"file":"03-promises.cbdc6dbf.js.map"}