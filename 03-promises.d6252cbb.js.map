{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GAU/B,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,IAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEtBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CAnCAO,SAASC,cAAc,QAE/BC,iBAAiB,UAAUC,IAC9BA,EAAEC,iBAEF,MAAMC,EAAW,IAAIA,EAASF,EAAEG,eAC1BC,EAAO,GACbF,EAASG,SAAQ,CAACC,EAAOC,KACvBH,EAAKG,GAAOC,OAAOF,EAAM,IAE3B,IAAIhB,EAAQc,EAAKd,MACjB,IAAK,IAAImB,EAAI,EAAGA,EAAIL,EAAKM,OAAQD,GAAK,EACxBrB,EAAcqB,EAAI,EAAGnB,GAOhCqB,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,qBAAqBzB,QAAeC,MAAU,IAEvEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QAAQ,kBAAkB3B,QAAeC,MAAU,IAVrEA,GAASc,EAAKa,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const formData = new formData(e.currentTarget);\n  const data = {};\n  formData.forEach((value, key) => {\n    data[key] = Number(value);\n  });\n  let delay = data.delay;\n  for (let i = 0; i < data.amount; i += 1) {\n    showPromice(createPromise(i + 1, delay));\n    delay += data.step;\n  }\n});\n\nfunction showPromice(promise) {\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`Reject promise ${position} in ${delay}ms`);\n    });\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","formData","currentTarget","data","forEach","value","key","Number","i","amount","then","$parcel$interopDefault","Notify","success","catch","failure","step"],"version":3,"file":"03-promises.d6252cbb.js.map"}